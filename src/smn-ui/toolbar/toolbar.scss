$sizes: 480 600 840 960 1280 1440 1600;
@import "../variables";

.ui-toolbar {
  left: 0;
  top: 0;
  right: 0;
  box-shadow: ui-shadow('4dp');
  transition: box-shadow 0.335s ui-easing('deceleration'),
  height 0.28s ui-easing('deceleration'),
  padding-bottom 0.28s ui-easing('deceleration'),
  background 0.28s ui-easing('deceleration');
  display: flex;
  align-items: center;
  padding: 4px;

  @include desktop {
    height: 64px;
    min-height: 64px;
  }
  @include mobile-portrait {
    height: 56px;
    min-height: 56px;
  }
  @include mobile-landscape {
    height: 48px;
    min-height: 48px;
  }

  .ui-button {
    margin: 12px;
    @include mobile-landscape {
      margin: 6px;
    }

    &:not(.success):not(.warning):not(.error):not(:disabled).flat {
      color: inherit;

      i {
        color: inherit;
      }
    }
  }

  .title {
    padding: 0 16px;
    font-weight: 500;
    cursor: default;
    user-select: none;

    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2; /* number of lines to show */
    line-height: 17px; /* fallback */
    max-height: 17*2px; /* fallback */
  }

  .logo {
    max-height: 30px;
    margin: 0 20px 0 10px;
    width: auto;
    height: 100%;
    user-select: none;

    @include mobile {
      display: none;
    }

    img {
      height: 100%;
    }

    &:first-child {
      @include desktop {
        margin-left: 15px;
      }
    }
  }

  .logo ~ .title {
    @include mobile {
      border-left: none;
    }
  }

  @keyframes fixZindex {
    0% {
      z-index: 2;
    }

    99% {
      z-index: 2;
    }
    100% {
      z-index: 3;
    }
  }

  animation: fixZindex 0.28s ui-easing('deceleration');
  animation-fill-mode: forwards;


  @each $size in $sizes {
    &.elevate-on-s#{$size} {
      height: 162px;
      padding-bottom: 102px;
      @media (max-width: #{$size}px) {
        height: 56px;
        padding-bottom: 4px;
      }
    }
  }

  &:not(.scrolled) {
    box-shadow: none;
  }

  &.flat:not(.scrolled) {
    box-shadow: none;
  }

}

@each $color, $color-value in $material-colors {
  .#{$color} {
    @each $weight, $weight-value in $color-value {
      &#{$weight} {
        background-color: map_get($weight-value, 'color');
        color: map_get($weight-value, 'text');
      }
    }
  }
}

.ui-toolbar {
  @each $size in $sizes {
    & ~ .ui-s#{$size} {
      position: relative;
      top: 0;
      @media (min-width: #{$size}px) {
        top: -64px !important;
      }
    }
  }
}
